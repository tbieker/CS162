bool LinkedList::add(int val){
	Node * curr;
	Node * newNode = new Node();
	newNode->data = val;
	
	//if entry is first of list
	if(head == NULL){
		newNode->next = NULL;
		newNode->prev = NULL;
		head = newNode;
		tail = newNode;
		
		return true;
	}
	
	//if data is less than head data, enter before head and move head
	if(newNode->data < head->data){
		newNode->next = head;
		newNode->prev = NULL;
		head->prev = newNode;
		head = newNode;
		
		return true;
	}
	
	curr = head;
	
	//search through list and enter data
	while(curr != NULL){
		//if data already exists in list, return false
		if(newNode->data == curr->data){
			return false;
		}
		
		//search and enter data in ascending order
		if(newNode->data < curr->data){
			newNode->next = curr;
			newNode->prev = curr->prev;
			curr->prev->next = newNode;
			curr->prev = newNode;
			
			return true;
		}
		
		curr = curr->next;
	}
	
	//if reached end of list, put node at tail
	newNode->next = NULL;
	newNode->prev = tail;
	newNode->prev->next = newNode;
	tail = newNode;
		
	return true;
}




1
3
7
9
10
12

12
10
9
7
3
1

9
10

10
9

